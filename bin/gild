#! /usr/bin/python
#
# The main gild script that wraps the commands.
#
# (c) 2015 by Sebastian Bauer
#

import glob
import os.path
import sys
import argparse
from subprocess import call

script = os.path.realpath(sys.argv[0])
scriptdir = os.path.realpath(os.path.dirname(script))
progname = os.path.basename(sys.argv[0])

commands = glob.glob(os.path.join(scriptdir,"gild-*"))
commands = [os.path.basename(command )for command in commands]
commands = sorted([command[5:] for command in commands])

# Until commands are proper libs or we devise anothe mechansim,
# we know the short helps here
def get_short_help(command):
	short_help = {
		"clone": "Clone all repositories managed by gild",
		"checkout": "Checkout a specific version of a specific component",
		"genpatch": "Generate patches for a component against a baseline",
		"get": "Get baseline archive",
		"list": "List gild-managed components and versions"
	}
	try:
		return short_help[command]
	except KeyError:
		return ""


if len(sys.argv)<2:
	print("usage: " + progname + " <command> [<args>]" )
	print("\nAvailable commands:")
	width = max([len(command) for command in commands]) + 2
	print("\n".join(["   " + command.ljust(width) + " " + get_short_help(command) for command in commands]))
	sys.exit(0)

command = sys.argv[1]

if command not in commands:
	sys.exit(progname + ": '" + command + "' is not a gild command.")

real_command = os.path.join(scriptdir,"gild-" + command)

call([real_command] + sys.argv[2:])
