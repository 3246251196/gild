#! /usr/bin/python
#
# This script checks out a specific branch version and applies
# all patches associated to that branch
#
# (c) 2014 by Sebastian Bauer
#

import glob
import os.path
import sys
from subprocess import call

script = os.path.realpath(sys.argv[0])
root = os.path.realpath(os.path.dirname(script) + "/../")

if len(sys.argv) < 2:
	sys.exit('Branch name must be specified!')

# The base path
base = os.path.join(root, "gcc")

# The series file relating branches to checkout ids
series = os.path.join(base, "series")

# The requested branch
reqbranch = sys.argv[1]

# Open the branch <-> checkout id table
lines = [line.strip() for line in open(series)]

# Determine branch name
branchok = False
for line in lines:
	branch, checkout = line.split("\t")
	if branch == reqbranch:
		branchok = True
		break

if not branchok:
	sys.exit("Couldn't find requested branch")

os.chdir(os.path.join(base,"repo"))
call(["git", "checkout", checkout, "-B", branch])
call(["git", "branch", "-f", branch+"-base"])

# List of all patches
patches = os.path.join("..",branch,"patches","*.patch")

# Apply them
call(["git", "am"] + glob.glob(patches))

