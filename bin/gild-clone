#! /usr/bin/env python3
#
# This script clones or updates all the vendor git repositories
#
# (c) 2014-2019 by Sebastian Bauer
#

from __future__ import print_function
import os
import sys
import argparse
from subprocess import call

from gildutils import get_components
from gildutils import component_completer
from gildutils import autocomplete

root = os.getcwd()

components = get_components()

parser = argparse.ArgumentParser(description="""
	Clone or fetch baselines for all or selected components. Available components:
	""" + ", ".join(components))

parser.add_argument('component', nargs='*', help="The components which to clone. If not specified, all components are cloned.").completer = component_completer
autocomplete(parser)
args = parser.parse_args()

sel_component = args.component
if sel_component is None or len(sel_component)==0:
	sel_component = components
unknown_components = list(set(sel_component) - set(components))
if len(unknown_components):
	print("Unknown components: " + ", ".join(unknown_components))
	sys.exit(1)

for component in components:
	if component not in sel_component:
		print(component + ': Ignored')
		continue
	os.chdir(os.path.join(root,component))
	if os.path.exists("repo"):
		os.chdir("repo")
		print(component + ': Fetching updates')
		call(['git', 'fetch', 'origin'])
	else:
		repo = open("repo.url").readline().strip()
		print(component + ': Cloning repo')
		call(['git', 'clone', repo, 'repo'])
